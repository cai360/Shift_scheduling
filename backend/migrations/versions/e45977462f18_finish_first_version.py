"""finish first version

Revision ID: e45977462f18
Revises: 03f817ef53fe
Create Date: 2025-08-10 15:27:20.325896

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e45977462f18'
down_revision = '03f817ef53fe'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('availabilities', schema=None) as batch_op:
        batch_op.alter_column('start_time',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Time(),
               existing_nullable=False)
        batch_op.alter_column('end_time',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Time(),
               existing_nullable=False)
        batch_op.drop_constraint(batch_op.f('availabilities_user_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('shift_assignments', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_index(batch_op.f('ix_user_shift_unique'))
        batch_op.drop_constraint(batch_op.f('shift_assignments_user_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('shift_assignments_shift_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key(None, 'shifts', ['shift_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('swaps', schema=None) as batch_op:
        batch_op.add_column(sa.Column('assignment_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('requester_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('cancelled', sa.Boolean(), nullable=False))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=False))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.drop_constraint(batch_op.f('swaps_responder_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('swaps_assigment_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('swaps_requested_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'shift_assignments', ['assignment_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'users', ['responder_id'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key(None, 'users', ['requester_id'], ['id'], ondelete='SET NULL')
        batch_op.drop_column('timeStamp')
        batch_op.drop_column('requested_id')
        batch_op.drop_column('assigment_id')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('active', sa.Boolean(), nullable=False))
        batch_op.add_column(sa.Column('deleted_at', sa.DateTime(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('deleted_at')
        batch_op.drop_column('active')

    with op.batch_alter_table('swaps', schema=None) as batch_op:
        batch_op.add_column(sa.Column('assigment_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('requested_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('timeStamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('swaps_requested_id_fkey'), 'users', ['requested_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('swaps_assigment_id_fkey'), 'shift_assignments', ['assigment_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('swaps_responder_id_fkey'), 'users', ['responder_id'], ['id'])
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('cancelled')
        batch_op.drop_column('requester_id')
        batch_op.drop_column('assignment_id')

    with op.batch_alter_table('shift_assignments', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('shift_assignments_shift_id_fkey'), 'shifts', ['shift_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('shift_assignments_user_id_fkey'), 'users', ['user_id'], ['id'])
        batch_op.create_index(batch_op.f('ix_user_shift_unique'), ['user_id', 'shift_id'], unique=True)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('availabilities', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('availabilities_user_id_fkey'), 'users', ['user_id'], ['id'])
        batch_op.alter_column('end_time',
               existing_type=sa.Time(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
        batch_op.alter_column('start_time',
               existing_type=sa.Time(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)

    # ### end Alembic commands ###
