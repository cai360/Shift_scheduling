"""Change start_time/end_time to Time

Revision ID: 90c2cc4de4fb
Revises: e45977462f18
Create Date: 2025-08-10 22:33:46.916677

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '90c2cc4de4fb'
down_revision = 'e45977462f18'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('shifts', schema=None) as batch_op:
        batch_op.alter_column('start_time',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Time(),
               existing_nullable=False)
        batch_op.alter_column('end_time',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Time(),
               existing_nullable=False)
        batch_op.create_index('ix_shift_date', ['date'], unique=False)

    with op.batch_alter_table('user_roles', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('user_roles_user_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('user_roles_role_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])
        batch_op.create_foreign_key(None, 'roles', ['role_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_roles', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('user_roles_role_id_fkey'), 'roles', ['role_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('user_roles_user_id_fkey'), 'users', ['user_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('shifts', schema=None) as batch_op:
        batch_op.drop_index('ix_shift_date')
        batch_op.alter_column('end_time',
               existing_type=sa.Time(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
        batch_op.alter_column('start_time',
               existing_type=sa.Time(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)

    # ### end Alembic commands ###
